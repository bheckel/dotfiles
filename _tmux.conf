###############################################################################
#     Name: .tmux.conf
#  Summary: tmux configuration file
#
#   $ tmux -2 new  # anonymous session, the '-2' is for vim color
#   $ tmux -2 new -s ses1
#   $ tmux -2 a
#   $ tmux -2 a -t ses1  # (or a digit instead of ses1 if created unnamed, see C-b s to find #)
#   $ tmux list-sessions
#   $ tmux kill-session
#   $ tmux kill-server
#   $ tmux pipe-pane -o 'cat >>~/output.#I-#P'  capture all output of this pane
#   $ tmux show-options -g status-right  # what is option set to currently?
#
#   C-a s     show sessions
#   C-a d     detach ($ tmux attach  to resume)
#   C-a x     kill this pane, works on a hung pane too (if this is the last pane, kill session)
#   C-a %     new tall pane
#   C-a "     new wide pane
#   C-a Alt-1 tile tall
#   C-a Alt-2 tile wide
#   C-a [     (or PgUp/PgDown) scroll buffer - v to select, enter to copy, C-a ] to paste
#   C-a q     then [n] to switch to n pane diagonal
#   C-Space   cycle with next-layout
#   C-a $     rename [session]
#
#   Print color palette e.g. what does colour81 look like:
#     for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
#
#   https://leanpub.com/the-tao-of-tmux/read
#
#  Created: 02 Oct 2015 (Bob Heckel)
# Modified: 02-Sep-2022 (Bob Heckel)
###############################################################################

# Avoid collision with the frequently-used vim keybinding C-b
unbind C-b
set-option -g prefix C-a

# We can't use a double C-a in vim, etc. without this
bind-key C-a send-prefix

bind-key = select-layout even-horizontal

bind-key d confirm-before -p "detach-client? (y/n)" detach-client

# This only re-runs the configuration file. It will not reset keybindings or styling applied to tmux.
bind-key r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded"

# Remap window navigation to Vim style
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Zoom for pre-v1.8
###unbind-key Down
###bind-key Down resize-pane -D 50
###unbind-key Up
###bind-key Up resize-pane -U 50
###unbind-key Left
###bind-key Left resize-pane -L 100
###unbind-key Right
###bind-key Right resize-pane -R 100
#### For finer adjustments use C-a + alt + arrow default which increases pane by 5 steps or this:
###bind-key 5 resize-pane -D 5

bind-key Up resize-pane -U 5
bind-key C-Up resize-pane -U 20
bind-key Down resize-pane -D 5
bind-key C-Down resize-pane -D 20
bind-key Left resize-pane -L 5
bind-key C-Left resize-pane -L 20
bind-key Right resize-pane -R 5
bind-key C-Right resize-pane -R 20

# Allow "C-a ," to name custom status/title bars
set -g allow-rename off

set -g set-titles on

# Slow down to to allow "C-a q [n]"
set -sg escape-time 275

# Set TERM=screen-256color in new windows
set -g default-terminal "screen-256color"

set -g status-fg colour2
set -g status-bg colour236

set -g status-left-length 40
# set -g status-left '#S #[fg=white] #($HOME/code/misc/lunchnleave.sh) ' 
# set -g status-left '#(pwd)'
set -g status-left '[#S] #{host} '
# set -g status-left '#S #[fg=Yellow] #{host} ' 

# set -g status-right-fg colour81
set -g status-right-length 62
# set -g status-right '#H #[fg=Yellow] #(avgload.sh) ' 
# set -g status-right '#{tmux-mem-cpu-load} %a %H:%M %d-%b'
# set -g status-right '#{uptime | cut -f 4-5 -d " " | cut -f 1 -d ","} %a %H:%M %d-%b'
#TODO
# set -g status-right '#(git status 2>&1 | head -n1')
set -g status-right '%A %H:%M %d-%b'

# Use vi mode in tmux screens like "C-a [" and "C-a ?"
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# Must shift-click to copy or paste in certain terminals if mouse ON
# Chromebook
#if-shell "test '\( #{$HOSTNAME} = 'penguin' \)'" 'set -g mouse off'
if-shell -b '[ "$(echo $HOSTNAME)" -eq penguin ]' 'set -g mouse off;'
# Termux
if-shell -b '[ "$(echo $HOSTNAME)" -eq localhost ]' 'set -g mouse on;'

# Workaround for WSL tmux when using Vim: "Ctr-a [" "Ctr-v v y"
if-shell -b 'test -n "$WSLENV"' 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel clip.exe'

setw -g history-limit 50000

