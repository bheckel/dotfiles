#!/bin/bash
#^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^
#    Name: $HOME/.bashrc
# Summary: bash config for at least Unix/Linux, Cygwin 1.3/1.5/1.7 and z/OS
#
#  Created: Tue 19-May-1998 (Bob Heckel)
# Modified: Sun 13-Sep-2020 (Bob Heckel)
#^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^

#----------------
# Generic  #{{{1 
#----------------
# Test for an interactive shell.  There is no need to set anything past this
# point for scp and rcp, and it's important to refrain from outputting anything
# in those cases.
[[ $- != *i* ]] && return

# If you change this to "emacs" a kitten will die:
set -o vi
set -o noclobber

# C-S=suspend C-Q=release bypass
stty -ixon 

# Tab completion after typing 'cd ' show dirs only.  See also FIGNORE for related completion restrictions.
complete -d cd

shopt -s extglob 

# Make fscking dark blue readable
printf '\e]4;4;#6495ed\a'

#-----------------------
# Generic Export  #{{{2
#-----------------------
export EDITOR=vi
# For git PS1 function
export GIT_DISCOVERY_ACROSS_FILESYSTEM=1
export GIT_CEILING_DIRECTORIES=/home
export HISTFILESIZE=50000  # max lines in $HISTFILE
export HISTIGNORE='f:fg:l:ls:la:cd:h:ll::d:by:&'  # '&' supposedly same as HISTCONTROL=ignoredups - consecutive dups that is
# No duplicates, no same successive entries ('&' HISTIGNORE doesn't work 2007-11-18)
export HISTCONTROL=ignoreboth
export HISTTIMEFORMAT='%F %T '
export IGNOREEOF=1  # require 2 ctr-d to exit
export LESS='--ignore-case'  # but still honors 'ThisSearchPattern'
# Prevent ugly default bolding
###export LS_COLORS='*.swp=00;35:*.swo=00;35:*.bak=00;35:ex=00;32:*.java=00;32:*.pm=00;32:no=00:fi=00:di=01;34:ln=00;36:*.lnk=00;36:*.gz=00;31:*.bz2=00;31:*.zip=00;31:*.tgz=00;31:*.7z=00;31'
# ow= avoid hard-to-read gray on green for rwxrwxrwx files
export LS_COLORS='ow=30;42:*.swp=00;35:*.swo=00;35:*.bak=00;35:ex=00;32'
export PAGER=less  # for man(1)
export PARINIT='rTbgqR B=.?_A_a Q=_s>| w65'  # par formatter
export PATH=$PATH:~/bin
export PERLLIB=$HOME/perllib
export PROMPT_COMMAND='echo -ne "\033]0;${PWD}\007";'
export TMP=$HOME/tmp
# Default "unknown host" indicator for my .vimrc statusline
export VIMSTATUSL='?@?'

# Deprecated
#GREP_OPTIONS=
#if grep --help | grep -- --exclude-dir &>/dev/null; then
#  for PATTERN in .cvs .git .hg .svn; do
#    GREP_OPTIONS="$GREP_OPTIONS --exclude-dir=$PATTERN"
#  done
#fi
#export GREP_OPTIONS

# Used by at least PS1, also good for use in shell scripts.  But bad for printing env.
# Ctrl-v escape to insert the ^[ because  "\[\033[01;38;5;52m\]"  won't work.
# Use this to find e.g. 243 for darkgray
# for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done;
export normal="[0m"
export fg_whitebold="[1;37m"
export fg_lightgray="[0;37m"
export fg_lightgraybold="[1;37m"
export fg_darkgray="[0;38;5;243m"
export fg_darkgraybold="[1;38;5;243m"
export fg_blue="[0;34m"
export fg_bluebold="[1;34m"
export fg_green="[0;32m"
export fg_greenbold="[1;32m"
export fg_cyan="[0;36m"
export fg_cyanbold="[1;36m"
export fg_red="[0;31m"
export fg_redbold="[1;31m"
export fg_magenta="[0;35m"
export fg_magentabold="[1;35m"
export fg_yellow="[0;33m"
export fg_yellowbold="[1;33m"

#-----------------------
# Generic Alias	 #{{{2
#-----------------------
alias ..='cd ..'
alias bc="bc -lq"  # allow floating point calcs, mess up other stuff
alias be="vi $HOME/.bashrc"
alias bgrep="$HOME/code/scripting/bgrep"
alias by=exit  # keepin' up the FTP tradition
alias cd..='cd ..; ls'
alias cdc="cd $HOME/code"
alias cdd="cd $HOME/code/database"
alias cdot="cd $HOME/dotfiles"
alias cdh="cd $HOME/code/html"
alias cdm="cd $HOME/code/misc"
alias cdp="cd $HOME/code/scripting"
alias cds="cd $HOME/code/sas"
alias cls=clear
alias cro='crontab -e'
alias datecalc="$HOME/code/scripting/datecalc"
alias ddg='w3m http://duckduckgo.com/lite'
alias f='fg'  # jobs -s  to list what's suspended
alias g=$HOME/dotfiles/gone.sh
# Can't use sed to eliminate leading spaces or it breaks coloring
# alias gb='git branch -v; echo "MRU:"; git for-each-ref --sort=-committerdate refs/heads/ --format="%(committerdate:short) %(authorname) %(refname:short)" | head -n5'
alias gb='git branch'
alias gitall="$HOME/code/misc/gitall"
# alias gitup='git add . && git commit -m"mod gitup" && git push'
alias gpul='git pull'
alias gpull='git pull'
alias gstash='git stash save --include-untracked'
alias grunt='pig -x local'
alias gs='git status'
alias gsl='git stash list'
alias h='history|tail -n20'
alias ha='history -a'  # append this
alias hr='history -n'  # read in from others
alias j="jobs -s"  # only show STOPPED (e.g. skip RUNNING blink.exe &) jobs
alias l='ls'
# Overridden later if non-GNU ls is present.  Do not move.
alias la='ls -FA --color=auto'
alias ls='ls --color --group-directories-first'
alias ll='ls -gh --color --group-directories-first'
alias lla='ls -agh --color --group-directories-first'
# Thanks Berkely...
alias lsd='find . -type d'
alias m=less
alias one="vi $HOME/dotfiles/oneliners"
#alias pse="ps -ef|grep ^$USER|grep -vP 'ps -ef|grep'"
#alias plinstall='perl Makefile.PL && make && make TEST_VERBOSE=1 test && make install'
alias qr="$HOME/code/misc/quickref_find.sh"
# Good luck Yoshi...
alias robots="export ROBOTOPTS=moveheaps,showscores,screwdriver,fastrobots; robots"
alias sasrun=$HOME/code/sas/sasrun
alias sdf='ssh -l bheckel sdf.org; date'
alias sl='ls --color=none'  # dyslexic daim branage
alias sr="$HOME/code/sas/sasrun2"
alias srcb="source $HOME/dotfiles/_bashrc"
alias tmls='tmux list-sessions'
alias tmux='tmux -u'  # UTF8
# If tree isn't installed:
alias tre="\ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'"
alias uvi="$HOME/code/scripting/uvi"  # don't change timestamp
alias ve="vim $HOME/.vimrc"
alias vin="vi -c 'syntax off'"
alias wget='wget -c'  # continue failures

#-----------------------------------
# bash functions must precede calls
# Generic Functions  #{{{2
#-----------------------------------

# 'Windows-ish Start' a file or file manager in GUI
case "$OSTYPE" in
         cygwin) st() { explorer    "${1:-.}"; } ;;
      linux-gnu) st() { pcfileman   "${1:-.}"; } ;;
        darwin*) st() { open        "${1:-.}"; } ;;
  linux-android) st() { termux-open "${1:-.}"; } ;;
              *) echo '.bashrc: Unknown file manager' >&2 ;;
esac

# cd lazy
cdl(){
  command cd "$@" && command ls;
}


ses() {
  # List (without arg) or access (with search string) any available vim Sessions (see .vimrc map ;r to read in the commands while in fc)
  if [ ! -z "$1" ];then
    # E.g. $ ses syngat  puts vi -S /mnt/nfs/home/bheckel/bob/Syngate/Session.vim in .vimxfer_ses then on exit prints the vi -S in case we
    # want to restart the same session later
    # TODO check for 0 results before fc
    # TODO detect hostname for find path
    (cd ~ && find ~/onedrive/ -maxdepth 3 -not -path '*/tmp/*' -not -path '*/_old/*' -name 'Session.vim' | xargs ls -lt | awk '{print "vi -S " $10}' | grep -i "$1" >| /cygdrive/c/temp/.vimxfer_ses \
     && cat /cygdrive/c/temp/.vimxfer_ses && fc && echo "vi -S $9")
  else
    (cd ~ && find ~/onedrive/ -maxdepth 3 -not -path '*/tmp/*' -not -path '*/_old/*' -name 'Session.vim' | xargs ls -lt | awk '{print "vi -S " $10}')
  fi
}


# Recycler to ReMoVe files we're not yet man enough to delete
# TODO allow run from other than pwd
# TODO don't write a partial MARKER on failure
rmv() {
  local VERBOSE
  local MARKER
  local __TMP

  MARKER=_DELETE
  # We don't want /tmp as the rmv dir
  __TMP=$TMP
  [ "$__TMP" = /tmp ] && __TMP=/$USER/tmp
  [ "$__TMP" = //tmp ] && __TMP=/$USER/tmp # double slash is due to root's home '/'
  [ "$__TMP" = '' ] && __TMP=/$USER/tmp
  [ "$__TMP" = / ] && __TMP=/$USER/tmp

  # -s placeholder file output is used for synching home and work
  if [ ! "$1" ]; then
    echo 'error: Must enter file(s) or file pattern.  Exiting.'
    echo 'Usage: rmv [-s|-v] file1 file2 pat* ...'
    echo "       Removes a file or files to $HOME/tmp"
    echo "       -s places a $MARKER marker after removing (sweep-away-sync mode)"
    echo "          Must be in pwd for this command to place marker properly"
    echo "       -v verbose mode"
    return 1
  fi

  if [ "$1" = '-s' ]; then
    shift
    for f in "$@"; do
      
      if [[ $f =~ ./.* ]]; then
        echo 'Cannot use fully qualified paths with -s, please cd first'
      else
        touch "${f}${MARKER}"
        echo "... marker ${f}${MARKER} placed"
      fi
    done
  fi

  if [ "$1" = '-v' ]; then
    VERBOSE=$1
    shift
  else
    VERBOSE=''
  fi

  if [ -d $__TMP ]; then
    for f in "$@"; do
      mv $VERBOSE "$f" $__TMP || echo 'failed to rmv'
    done
  else  # rare
    echo "uh oh $HOME/tmp does not exist ... attempting to mkdir ..."
		mkdir $HOME/tmp
		if [ -e $HOME/tmp ]; then
		  echo "... success ... try again now"
		else
		  echo "ERROR: cannot create $HOME/tmp"
		fi
  fi
}


# Adapted from http://hermitte.free.fr/cygwin/#Win32
# Shortcuts + better presentation of the directories pushed.
# Display the directories pushed
d() {
  \dirs | awk  '{gsub(/ ~/, "!~"); gsub(/ \//, "!/") ; n=split($0,arr,"!") ; 
  for (i=1;i<=n;++i) print (i-1)" -> "arr[i] }'
}
# Note: We cannot directly write «dirs() { \dirs | ... }» as it would
# end in an infinite loop. Hence the declaration of «d(){}» and dirs as
# an alias for d.
alias dirs=d

# Push a directory
p() {
  # The quotes in «"$*» permit to write «p $vim»
  \pushd "$*" > /dev/null
	# List the directories pushed
	d
}
# Move to a pushed directory
alias p1="p +1"
alias p2="p +2"
alias p3="p +3"
alias p4="p +4"
alias p5="p +5"


# For PROMPT_COMMAND.  22-Mar-11 deprecated, use \j where possible
stoppedjobs() { 
  jobs -s | wc -l | sed -e "s/ //g" 
}


# Build a disposable sandbox
sbx() {
  # Leading epoch date is for sorting purposes.  To navigate do something like:  cd ~/tmp/*09Jun*
  todayuniq=`date +%s_%d%b%y`$1
  mkdir $HOME/tmp/$todayuniq
  cd $HOME/tmp/$todayuniq
  pwd
}


lt() {
  if test "x$1" = "x"; then
    \ls -lt | head -n50
  else
    \ls -lt "$1" | head -n50
  fi
}


parse_git_dirty() {
  GS_PS1=$(git status 2> /dev/null | tail -n1)
  [[ ${GS_PS1:0:17} != 'nothing to commit' ]] && echo '*'
}
parse_git_branch() {
  # Assumes  export GIT_DISCOVERY_ACROSS_FILESYSTEM=1  to avoid slowness on network drives
  local _tmp=$( git status 2>/dev/null | head -n1 )

  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1${fg_redbold}$(parse_git_dirty)${fg_darkgray}]/"
  #TODO
  # [[ $_tmp = 'On branch develop' ]] && git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1${fg_redbold}$(parse_git_dirty)${fg_darkgray}]/"
  # [[ $_tmp != 'On branch develop' ]] && git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}


# For informational searches e.g. $ google oracle error codes
function urlencode() { echo -n $@ | perl -pe's/([^-_.~A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg'; }
function goo() { w3m http://www.google.com/search?q="`urlencode $@`" ;}
function google() { w3m http://www.google.com/search?q="`urlencode $@`" ;}
#$ Firewall jumper vi ~/bin/termux-url-opener
#termux-open http://www.google.com/search?q="cache:$@" ;
function gooc() { w3m-open http://www.google.com/search?q="cache:`urlencode $@`" ;}


gl() {
  # local filebranch=$1
  # test  "x$filebranch" = "x" && filebranch='CURRENT BRANCH'
  local days=$2
  test  "x$days" = "x" && days=30
  git log --pretty=format:"%Cblue%h %ar |%Cgreen %s%Cblue %d [%an]" \
          --graph \
          --date=short $1 \
          |sed "s/^\* //g" \
          |head -n$days; \
          #echo -n; echo; echo "${fg_darkgray} ...displaying last $days $filebranch";
          echo -n; echo; echo "${fg_darkgray} ...displaying last $days days";
}


md() {
  mkdir ${1} && cd ${1} && ls -l
}


# Create new tmux session
tmn() {
  if [ -z ${1} ]; then
    #tmux -u -2 new -s s1\; split-window -h
    tmux new
  else
    tmux -u -2 new -s "s${1}"\; split-window -h
  fi
}


# Re-attach to existing session, usually named s1, s2...
tma() {
  if [ -z ${1} ]; then
    tmux -u -2 a -t "s1"
  else
    tmux -u -2 a -t "s${1}"
  fi
  tmux list-sessions
}


bak() {
  if [ -e $HOME/code/misc/bak ];then
    $HOME/code/misc/bak ${1}
  else
    cp -v ${1} ${1}.bak
  fi
}


# If locate() is not available
function loc() {
  # find $HOME/code | grep -i "${1}" | grep -v '\.git' | xargs ls -ltG >|/tmp/.loc && vim -c "/${1}" /tmp/.loc
  find $HOME/code | grep -i "${1}" | grep -v '\.git' >|/tmp/.loc.grep && vim -R /tmp/.loc.grep
}


# Find my README file by title
function rme() {
  find $HOME/code/rme | grep -i "${1}" | grep -v '\.git' >|/tmp/.rme.grep && vim -R /tmp/.rme.grep
}


# git diff last 2 commits for a file
function gdt() {
  oldhash=$(git log --pretty=format:"%h %ar | %s %d [%an]" --graph --date=short ${1} | sed "s/^\* //g" | head -n2 | head -n1 | awk '{print $1}')
  newhash=$(git log --pretty=format:"%h %ar | %s %d [%an]" --graph --date=short ${1} | sed "s/^\* //g" | head -n2 | head -n2 | awk '{print $1}' | tail -n1)

  hashes="${oldhash}:./${1} ${newhash}:./${1}"

  git difftool $hashes
}

function gitup() {
  MSG=${1:-mod}
  #echo "git add . && git commit -m ${MSG} && git push"
  git add . && git commit -m"${MSG}" && git push
}

# Generic Functions end


#-------------------
# Cygwin  #{{{1
#-------------------
case "$OSTYPE" in
  CYGWIN*|cygwin*)

    #-------------------
    # Export Cygwin  #{{{2
    #-------------------
    # For drives not mounted by Cygwin
    export a=/cygdrive/a
    export c=/cygdrive/c
    export d=/cygdrive/d
    export e=/cygdrive/e
    export f=/cygdrive/f
    export u=/cygdrive/u
    export CYGWIN=nodosfilewarning  # MS-DOS style path detected: u:/tmp/bdfCURR.rtpsh005
    # export CVSROOT=$HOME/repository
		export EDITOR=vim
    export LANG=en_US
    # Lowercase Windows hostnames
    export LCHOSTNAME="`echo ${HOSTNAME} | tr [A-Z] [a-z]`"
    # The echo -ne "\033]0;${PWD}\007" causes rxvt titlebar to show PWD.
    # '\[ ... \]' says "ignore this material while calculating the size of the prompt".
    # Want our history appended (-a) and other term's history merged into ours (-n)
    # export PROMPT_COMMAND='history -a; echo -ne "\033]0;${PWD}\007";'
    export PS1='${fg_darkgray}\j ${fg_greenbold}\u@${LCHOSTNAME}${fg_darkgray}$(parse_git_branch) \w/ \d \t ${normal} \n\$ '
    export PS2=' '  # allow multiple line copy to clipboard 
    # export SENSIBLE_BROWSER='/cygdrive/c/Program\ Files/mozilla\ firefox/firefox.exe'
    # export TEMP=/cygdrive/c/temp
    export VIMSTATUSL="${USERNAME}@`echo ${HOSTNAME} | tr [A-Z] [a-z]`"
    #-------------------
    # Functions Cygwin  #{{{2
    #-------------------

    # end Functions Cygwin

    #-------------------
    # Alias Cygwin  #{{{2
    #-------------------
    alias by=exit  # like FTP and SAS
    alias catput=$HOME/code/misc/catput.sh
    # This assumes $TEMP is defined to C:\temp above for Cygwin vim/gvim issues (can't reside in Generic section, normal unix uses ~/tmp)
    # alias d12="(cd $TEMP; vi -c 'map q :qa<CR>' -Rd 1 2)"
    alias d12="(cd /cygdrive/c/temp; vi -c 'map q :qa<CR>' -Rd 1 2)"
    alias d13="(cd /cygdrive/c/temp; vi -c 'map q :qa<CR>' -Rd 1 3)"
    alias d23="(cd /cygdrive/c/temp; vi -c 'map q :qa<CR>' -Rd 2 3)"
    alias d123="(cd /cygdrive/c/temp; vi -c 'map q :qa<CR>' -Rd 1 2 3)"
    alias cygwin=$HOME/code/misc/cygwin.bat  # norc bat version must be doubleclicked
    ###alias budrsync='rsync -avz /home/bheckel/code/ root@buddha:/home/bheckel/code && rsync -avzL /home/bheckel/tobuddha/ root@buddha:/home/bheckel/tobuddha'
    # Cygwin fix.  Use the real fg for e.g. fg %2
    alias f='fg; echo'
    alias gv=gvim
    # Allow output to be triple clicked as a noop.
    ###alias h='history|tail -20|perl -pe "s/(\d+)(.*)/: \1; \2/"'
    alias l='ls -GFw80 --color=none'   # for speed in Cygwin
    # Elim . .., owner and group info on Cygwin.
    alias ll='ls -FloGgh --color=auto'
    alias lla='ls -FlAoh --color=auto'
    alias m="less -FRSX"  # don't use less if it fits in the window
    # Present Working Windows Directory
    alias pwwd='cygpath -w "`pwd`"'
###    alias runllg="w3m -no-cookie -dump_source 'http://rtpsawn321/links/runllg.asp?action=Run+LLG'|grep '^LLG' ; grep ERRMSG /cygdrive/x/SQL_Loader/Logs/LGI.log || echo fail"
    ###alias sas8="c:/Program\ Files/SAS\ Institute/SAS/V8/sas.exe"
    ###alias sas9="c:/Program\ Files/SAS/SAS\ 9.1/sas.exe"
    alias vi=vim

    # Avoid nullglob or e.g. ls k* will show all files if no k* files exist.
    shopt -s cdspell checkhash checkwinsize cmdhist huponexit \
             histappend cdable_vars

    ###stty erase ^H intr ^C kill ^K

###    umask 022
  ;; # end Cygwin

   #------------------
   # SunOS  #{{{1 
   #------------------
  'SunOS')
     #------------------
     # Export SunOS  #{{{2 
     #------------------
     export EDITOR=vi
     # Set colors in set_prompt_colors(), not here.
     ###export PS1='\[${fg_darkgray}\]:\[${normal}\] `stoppedjobs`\[${prompt_beg}\]$USER@${HOSTNAME:0:8}\[${prompt_end}\]\[${fg_green}\]\$\[${fg_darkgray}\];\[${normal}\] '
     ###export PS1=':`stoppedjobs`$USER@${HOSTNAME:0:8}; '
     export PS2=' '  # allow multiple line copy to clipboard 
     export VIMSTATUSL="${USER}@`echo ${HOSTNAME} | tr [A-Z] [a-z]`"

     #--------------
     # Alias SunOS  #{{{2 
     #------------------
     alias l='ls -F'
     alias la='ls -FA'
     alias ls='ls -F'
     alias ll='ls -Fl'
     alias lla='ls -FlA'
     export PATH=$HOME/bin:$PATH

     # Box specific differences:

     if [ $HOSTNAME = 'sunstat' ]; then
       alias sas='/apps/sas912/sas'
     else
       alias sas='/apps/sas8.2/sas'
       alias sas8='/apps/sas8.2/sas'
       alias sas9='/apps/sas912/sas'
     fi

     if [ $HOSTNAME = 'buddha' ]; then
       # Leave / as root's home for things like .Xauthority, etc.
       export LD_LIBRARY_PATH=/opt/sfw/lib:/opt/csw/lib:/usr/local/lib
       export PATH=$PATH:/opt/bin:/opt/sfw/bin:/opt/csw/bin:/usr/ccs/bin
       # TODO run once only and only if X is running, but don't think it's
       # more than an annoyance if left as is
       /usr/openwin/bin/xmodmap /opt/share/xmodset

       alias hf='hiber -nm off'
       alias ho='hiber -nm on'
       alias ls='gls -F --color'
       # Assumes this has been run first
       # LD_LIBRARY_PATH=/opt/mozilla/lib:/opt/sfw/lib:/opt/csw/lib
       # TODO LD_LIBRARY_PATH won't work inside shell script, must run from
       # command line like this:
       # export LD_LIBRARY_PATH=/opt/mozilla/lib:$LD_LIBRARY_PATH && moz
       ###alias moz=/opt/mozilla/mozilla
       alias x='rxvt -sr -sk -cr green -pr blue -sl 999 -fn "-sun-*-*-*-*-12-*-*-*-*-*-*-*-*" -bg black -fg wheat -geometry 80x33 -e bash -i'
     fi

     if [ $HOSTNAME = 'daeb' ]; then
       export PATH="$HOME/bin:/opt/bin:/usr/bin:/usr/local/bin:/bin:/opt/sfw/bin:/usr/ucb/:/usr/ccs/bin:/opt/mysql/bin"
       # Used at least by 'Bash Prompt Here'
       export USER=`/usr/ucb/whoami` 
       # For at least mysql
       export LD_LIBRARY_PATH=/opt/sfw/lib
       export MANPATH=$MANPATH:/opt/man:/opt/sfw/man:/usr/openwin/man
       # Run system check every other day
       if [ `date | awk '{print $3}' | perl -e '$x=<>; $y=($x%2); END{print $y}'` = 0 ]; then
         echo
         \ls -l /opt/apache/logs/*_log
         echo
         df -k
         echo
         uptime
         who
         echo
         last|grep -v bheckel|head -9
       fi
     fi

     stty erase ^? intr ^C kill ^K

     shopt -s cdspell 

     umask 027
  ;; # end SunOS

  #-------------------
  # Linux  #{{{1
  #-------------------
  linux-* | Linux)
      #----------------
      # Export Linux  #{{{2 
      #----------------

      export PATH=~/bin:$PATH
      # export PROMPT_COMMAND='history -a; echo -ne "\033]0;${HOSTNAME:0:4}:${PWD}\007";'
      export PS1='${fg_darkgray}\j ${fg_greenbold}\u@${HOSTNAME}${fg_darkgray}$(parse_git_branch) \W/ \d \t ${normal} \n\$ '
      export VIMSTATUSL="${USER}@`echo ${HOSTNAME}`"
      # For crontab -e
      export VISUAL=vim

      #----------------
      # Alias Linux  #{{{2 
      #----------------

      # Quick diff
      alias d12="(cd ~/tmp; vi -Rd 1 2)"
      alias d13="(cd ~/tmp; vi -Rd 1 3)"
      alias d123="(cd ~/tmp; vi -Rd 1 2 3)"
      alias d34="(cd ~/tmp; vi -Rd 3 4)"
      alias ll='ls -lh --color --group-directories-first'
      ###alias moz='export DISPLAY=158.111.250.170:0.0; mozilla&'
      ###alias sqlplus=/usr/lib/oracle/xe/app/oracle/product/10.2.0/server/bin/sqlplus
      # Print Windows Working Directory.  Command is $ pwd|sed 's/\//\\/g'" before backslashitis.
      alias pwwd="pwd|sed 's/\\//\\\\/g'"

      #----------------
      # Functions Linux  #{{{2 
      #----------------

      #----------------
      # Ubuntu #{{{2
      #----------------

      alias pse="ps -ef | grep ^$USER | grep -vP 'ps -ef|grep' | grep -v chrome"
      alias systeminfo='df -h && echo && free -m && echo && grep --color="never" name /proc/cpuinfo | uniq && echo && lspci | grep --color="never" VGA && echo && xrandr | grep --color="never" connected && echo && uname -rms'
      alias usb='sudo fdisk -l; mount|grep "^/dev/sd"; sudo mkdir /media/usb; echo; echo "try this: sudo mount -t vfat /dev/sdb /media/usb -o uid=1000,gid=1000,utf8,dmask=027,fmask=137"; echo; echo "usually /dev/sdb or sdc, disconnect: sudo umount /media/usb"'

      if [ $HOSTNAME = 'yoniso' ]; then
        alias cdrom='sudo mount -t iso9660 /dev/cdrom /media/cdrom; mount|grep "^/dev/cd"; echo "sudo umount /media/cdrom"'
        alias kindle='sudo mount -t vfat /dev/sdb /media/kindle -o uid=1000,gid=1000,utf8,dmask=027,fmask=137; mount|grep "^/dev/sd"; echo "sudo umount /media/kindle"'
        alias nexus='sudo mount -t vfat /dev/sdb /media/nexus -o uid=1000,gid=1000,utf8,dmask=027,fmask=137; mount|grep "^/dev/sd"; echo "sudo umount /media/nexus"'
      fi

      if [ $HOSTNAME = 'appa' ]; then
        alias brinno='sudo mount -t vfat /dev/sdb1 /media/brinno/ -o uid=1000,gid=100,utf8,dmask=027,fmask=137'
        alias ubrinno='sudo umount /media/brinno'
        alias vim='/usr/local/bin/vim'
      fi

      # For ~/.fluxbox/menu.  Keep terminal open.
      if [ -n "$RUNCMDFLUXBOX" ]; then
        eval "$RUNCMDFLUXBOX"
        unset RUNCMDFLUXBOX
      fi

      #----------------
      # CentOS  # {{{2
      #----------------
      if [ $HOSTNAME = 'sasdev-01.twa.ateb.com' ]; then
        export PS1='${fg_darkgray}\j ${fg_yellowbold}\u@${HOSTNAME}${fg_darkgray}$(parse_git_branch) \W/ \d \t ${normal} \n\$ '
      fi

      if [ $HOSTNAME = 'sas-01.mrk.ateb.com' ]; then
        export PS1='${fg_darkgray}\j ${fg_redbold}\u@${HOSTNAME}${fg_darkgray}$(parse_git_branch) \W/ \d \t ${normal} \n\$ '
        alias usvx='vi scp://bheckel@sas-01.twa.ateb.com//Drugs/Personnel/bob/tmp/.vimxfer'
      fi

      if [ $HOSTNAME = 'sas-01.twa.ateb.com' ] || [ $HOSTNAME = 'sasdev-01.twa.ateb.com' ] || [ $HOSTNAME = 'sas-01.mrk.ateb.com' ]; then
        # See also ~/.bashrc.project
        unset SSH_ASKPASS
        alias cavx='vi scp://bheckel@sas-01.mrk.ateb.com//Drugs/Personnel/bob/tmp/.vimxfer'
        alias d12="(cd ~/bob/tmp; vi -Rd 1 2)"
        alias d13="(cd ~/bob/tmp; vi -Rd 1 3)"
        alias d123="(cd ~/bob/tmp; vi -Rd 1 2 3)"
        alias d34="(cd ~/bob/tmp; vi -Rd 3 4)"
        alias vi=$HOME/usr/local/bin/vim

        # This sometimes keeps things from failing when the minimal vim is installed as vi
        export EDITOR=/mnt/nfs/home/bheckel/usr/local/bin/vim
        export SASV9_OPTIONS='-validvarname=any'

        # E.g. Mar  3 07:32 /Drugs/Cron/Daily/tmm_enroll_ratio/tmm_enroll_ratio.log
        function myls() {
          ls -lgG $1 |sed -r 's/^\S+ \S+ \w+ //g'
        }

        # Allow mintty ctrl click to open Linux path in Win Explorer
        td() {
          echo "/cygdrive/t/${1:7:999}"
        }

        #umask 022  # 022 is 755, 037 is 740
      fi

      #----------------
      # ChromeOS #{{{2
      #----------------

      if [ $HOSTNAME = 'chromeos' ]; then
        # Make sure we can write to this bitch
        sudo mount -i -o remount,exec /home/chronos/user
        cd ~

        # Optionally start Dropbox if it's not running.
        # http://gabeortiz.net/2011/how-to-get-dropbox-working-on-a-cr48-google-chrome-netbook/
        if [ -z "$(pgrep dropbox)" ] && [ -d ~/.dropbox-dist ]; then
          echo -n 'Start Dropbox? '
          read yn
          if [ "$yn" = 'y' ];then
             ~/.dropbox-dist/dropboxd &
          fi
        fi

        alias vi='~/bin/vim -u ~/code/misc/_vimrc'
###        export VIMRUNTIME=/home/chronos/user/.vim
      fi

      # Use: bigshell FONTSIZE (where fontsize defaults to 16)
      function bigshell() {
        fontsize=${1:-16}
        urxvt -fn "xft:DejaVu Sans Mono:pixelsize=$fontsize" -bc -fb "xft:DejaVu Sans Mono:pixelsize=$fontsize" -tn xterm -bg black -fg grey +sb -color0 "#000000" -color1 "#9e1828" -color2 "#4f874f" -color3 "#968a38" -color4 "#5d5da0" -color5 "#963c59" -color6 "#418179" -color7 "gray" -color8 "gray40" -color9 "#cf6171" -color10 "#c5f779" -color11 "#fff796" -color12 "#4186be" -color13 "#cf9ebe" -color14 "#71bebe" -color15 "white" -e /usr/bin/crosh
      }


      # CR48  # {{{2
      if [ $HOSTNAME = 'ubuntu' ]; then
        ###export PATH=$PATH:/home/ubuntu/android_sdk_linux_m3-rc22a/tools
        # Don't want autostart so that at least this box won't start modifying immediately in case of trouble.
        alias dropbox='~/.dropbox-dist/dropboxd &'
        alias vi='vim -u ~/code/misc/_vimrc'
      fi

      # Termux  # {{{2
      if [ $HOSTNAME = 'localhost' -a $HOSTTYPE = 'aarch64' ]; then
        export TERM=screen-256color

        alias cdd="cd $HOME/downloads"
        alias nb='newsboat -q -r'
        alias pa='termux-media-player pause'
        alias pl='termux-media-player play'
        # Screenscrape
        alias sgol='echo && w3m -dump https://finance.yahoo.com/quote/SGOL%3Fp=SGOL/ | grep --after-context=4 watchlist | tail -n3 | termux-toast'
        alias tupd='pkg update && pkg upgrade'

        function catput() {
          cat ${1} | termux-clipboard-set
        }

        # Instead of cloning my github repo...not sure if thousands of files is 
        # a problem on Android
        function gh() {
          if [ $# -eq 0 ]; then
            # Jump down to the repo "folders"
            w3m -num +165 https://github.com/bheckel/code
          elif [ $# -eq 2 ]; then
            # Direct to a file $ gh rme termux.txt
            w3m -num https://github.com/bheckel/code/raw/master/${1}/${2}/
          else
            echo 'usage: gh [section] [filename]'
          fi
        }

        function tbak() {
          cd /data/data/com.termux/files && \
          tar cfz /sdcard/termux.bak.tgz home usr
          # TODO move tarball to Gdrive
        }

        function ts() {
          termux-share -a send ${1}
        }

        function w() {
          id=$(cat ~/bin/wapi_key)
          curl --no-progress-meter "https://api.openweathermap.org/data/2.5/onecall?lat=35.92115428&lon=-78.5754912&include=hourly&appid=${id}&units=imperial" | jq '[.| {ct: .current.temp, fl: .current.feels_like, hu: .current.humidity, uv: .current.uvi, ws: .current.wind_speed, wr: .current.weather[0].description, sr: .current.sunrise | strflocaltime("%%%H:%%%M:%%%S %%%Z"), ss: .current.sunset | strflocaltime("%%%H:%%%M:%%%S %%%Z"), pop1: .hourly[0].pop, pop2: .hourly[1].pop}]'
        }
      fi  # we're probably running termux

      shopt -s cdspell checkhash checkwinsize cmdhist dotglob histappend 

      stty erase ^? intr ^C kill ^K

  ;; # end Linux

  #-------------------
  # NetBSD  #{{{1
  #-------------------
  'netbsd')
    # TODO be careful this is only expecting sdf, add hostname filter
     ###if [ -z $NONINTERACTIVE  ]; then
       # Used  touch ~/.hushlogin  to shutup MOTD and it somehow affects
       # this.  No big loss.
       ###top -d 2 | col -b | grep states
       ###mailstat $HOME/.procmail/log
     ###fi

     export EDITOR=/usr/pkg/bin/vim
     # For mutt on sdf at least
     export LANG=en_US.UTF-8
     export LC_TYPE=en_US.UTF-8
     export MAILCHECK=5
     export PATH=$HOME/bin:$PATH:/usr/pkg/bin
     # TODO colors force lines to not wrap to new line
     export PS1='${fg_darkgray}\j ${fg_whitebold}\u@${HOSTNAME}${fg_darkgray} \W/ \d \t ${normal} \n\$ '
     # export PROMPT_COMMAND='echo -ne "\033]0;`stoppedjobs`${HOSTNAME:0:6}:${PWD}\007"'
     export SURFRAW_text_browser=w3m
     export WWW_HOME=http://www.google.com
     export TERM=xterm
     export TZ=/usr/share/zoneinfo/US/Eastern

     if [ $HOSTNAME = 'sdf' ] || [ $HOSTNAME = 'sverige' ]; then
       alias crontab=mkcron
     fi
     alias jam='ps -aux | grep $USER'
     alias la='\ls -la'
     alias ls='\ls -F'
     alias ll='\ls -Fl'
     alias sha1sum='cksum -a sha1 '
     alias ve="vi ~/.vimrc"
     alias vi='/usr/pkg/bin/vim'

     umask 077
     # This should be in .bash_logout:
     ## Flush so that mail received during this login session is not counted
     ## at next login.
     # mailstat $HOME/.procmail/log 1>/dev/null

      #----------------
      # Functions NetBSD  #{{{2 
      #----------------

      shopt -s cdspell checkhash checkwinsize cmdhist huponexit \
	             histappend cdable_vars

  ;; # end NetBSD

  # Mainframe  #{{{1
  #-------------------
  'OS/390')
      export EDITOR=vim
      export PATH=$HOME/bin:/IBMGNU/bin:/usr/local/bin:$PATH
      # Mandatory for dtelnet
      export TERM=xterm

      # whoami returns OMVSKERN but $LOGNAME is bqh0
      unalias ls
      alias bc="bc -l"  # allow floating point calcs
      alias l='ls -F'
      alias ls='ls -F'
      alias la='ls -aF'
      alias ll='ls -lF'
      alias lt='ls -ltF | head -n20'     # latest twenty
      alias vi=vim

      umask 022
  ;; # end OS/390

  * )  #   
      ###if [ -z $NONINTERACTIVE ]; then
        echo "$HOME/.bashrc: Unknown OSTYPE.  May need to edit .bashrc"
      ###fi
  ;;
esac # }}}1
# Security or project related additions:  #{{{1

# if [ $HOSTNAME = 'SAS-01' ] || [ $HOSTNAME = 'SAS-02' ]; then
#   export SASV9_OPTIONS='-validvarname=any'
# fi

if [ -e $HOME/.bashrc.project ]; then
  echo ".bashrc: sourcing $HOME/.bashrc.project..."
  source $HOME/.bashrc.project
fi
